@startuml
title Grid Select Sequence
hide footbox

Actor "Turn Player" as Player
participant "TicTacToeView" as TicTacToeView
participant "GameGridContext" as GameGrid
participant "GameStateContext" as GameState
participant "GameTurnContext" as GameTurn

Player -> TicTacToeView ++: 
TicTacToeView -> TicTacToeView ++: selectGameGrid( )

opt when game is over
	TicTacToeView -> GameState ++: check game is over
	GameState -> GameState: gameMode !== 'ON_GAME'
	GameState --> TicTacToeView --: boolean
	TicTacToeView --> Player: early return
end

TicTacToeView -> GameGrid: get grid data in (row, col)
activate GameGrid
GameGrid -> GameGrid: getGameGrid(row, col)
GameGrid --> TicTacToeView: selectedGameGrid
deactivate GameGrid

opt when selected grid is already occupied
TicTacToeView -> GameGrid: check selected grid is occupied
activate GameGrid
	GameGrid -> GameGrid: selectedGameGrid.occupied === true
	GameGrid --> TicTacToeView:boolean
deactivate GameGrid
TicTacToeView --> Player: early return
end

TicTacToeView -> GameGrid ++: set grid data in (row, col)
GameGrid -> GameGrid: setGameGrid(row, col, gamePlayerKey, gameTurn)
GameGrid --> TicTacToeView --:

opt when turn player wins
	TicTacToeView -> GameGrid ++: check player wins
	note right
	Three same marks are placed in horizontal, vertical, or diagonal row.
	end note
	GameGrid -> GameGrid: checkGameEndWithWin(gamePlayerKey)
	GameGrid --> TicTacToeView --: boolean

	TicTacToeView -> GameState ++: set result with winning of turn player
	note right
	gameMode: ON_GAME -> GAME_OVER
	end note
	GameState -> GameState ++: setGameEndWithWin(gamePlayerKey)
	GameState -> GameState ++: setGameEnd(PLAYER_WIN)
	GameState -> GameState: setGameModeToGameOver( )
	GameState -> GameState: setGameResult(PLAYER_WIN)
	GameState --> GameState --: 
	GameState --> GameState --: 
	GameState --> TicTacToeView --: 
	TicTacToeView --> Player: early return
end

opt when game is draw
	TicTacToeView -> GameGrid ++: check game is draw
	note right
	All grids are occupied with marks.
	end note
	GameGrid -> GameGrid: checkGameEndWithDraw(gamePlayerKey)
	GameGrid --> TicTacToeView --: boolean
	
	TicTacToeView -> GameState ++: set result with draw game
	note right
	gameMode: ON_GAME -> GAME_OVER
	end note
	GameState -> GameState ++: setGameEndWithDraw()
	GameState -> GameState ++: setGameEnd(DRAW)
	GameState -> GameState: setGameModeToGameOver( )
	GameState -> GameState: setGameResult(DRAW)
	GameState --> GameState --: 
	GameState --> GameState --: 
	GameState --> TicTacToeView --: 
	TicTacToeView --> Player: early return
end

TicTacToeView -> GameTurn ++: next turn
note right
	in next turn, change turn player
end note
GameTurn -> GameTurn ++: advanceGameTurn( )
GameTurn -> GameTurn: increaseGameTurn( )
GameTurn -> GameTurn: toggleGamePlayerKeyOnTurn( )
GameTurn -->  GameTurn --:
GameTurn --> TicTacToeView --:

TicTacToeView --> TicTacToeView --:
TicTacToeView --> Player --: 
@enduml
