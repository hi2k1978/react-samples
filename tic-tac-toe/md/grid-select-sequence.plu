@startuml
title Grid Select Sequence
hide footbox

Actor "Turn Player" as Player
participant "TicTacToeView" as TicTacToeView
participant "GameGridContext" as GameGrid
participant "GameStateContext" as GameState
participant "GameTurnContext" as GameTurn

Player -> TicTacToeView: selectGameGrid( )
activate TicTacToeView

opt when game is over
    TicTacToeView -> GameState: check game is over
    activate GameState
    GameState -> GameState: gameMode !== 'ON_GAME'
    GameState --> TicTacToeView: boolean
    deactivate GameState
    TicTacToeView --> Player: early return
end

TicTacToeView -> GameGrid: get grid data in (row, col)
activate GameGrid
GameGrid -> GameGrid: getGameGrid(row, col)
GameGrid --> TicTacToeView: selectedGameGrid
deactivate GameGrid

opt when selected grid is already occupied
    TicTacToeView -> GameGrid: check selected grid is occupied
    activate GameGrid
    GameGrid -> GameGrid: selectedGameGrid.occupied === true
    GameGrid --> TicTacToeView:boolean
    deactivate GameGrid
    TicTacToeView --> Player: early return
end

TicTacToeView -> GameGrid: set grid data in (row, col)
activate GameGrid
GameGrid -> GameGrid: setGameGrid(row, col, gamePlayerKey, gameTurn)
GameGrid --> TicTacToeView:
deactivate GameGrid

opt when player wins
    TicTacToeView -> GameGrid: check player wins
    note right
    	 Three same marks are placed in horizontal, vertical, or diagonal row.
    end note
    activate GameGrid
    GameGrid -> GameGrid: checkGameEndWithWin(gamePlayerKey)
    GameGrid --> TicTacToeView: boolean
    deactivate GameGrid

    TicTacToeView -> GameState: setGameEndWithWin(gamePlayerKey)
    note right
    	 gameMode: ON_GAME -> GAME_OVER
    end note
    activate GameState
    GameState -> GameState: setGameEnd()
    activate GameState
    GameState -> GameState: setGameModeToGameOver( )
    GameState -> GameState: setGameResult(PLAYER_WIN)
    GameState --> TicTacToeView
    deactivate GameState
    deactivate GameState
    TicTacToeView --> Player: early return
end

opt when game is draw
    TicTacToeView -> GameGrid: check game is draw
    note right
    	 All grids are occupied with marks.
    end note
    activate GameGrid
    GameGrid -> GameGrid: checkGameEndWithDraw(gamePlayerKey)
    GameGrid --> TicTacToeView: boolean
    deactivate GameGrid
    deactivate GameGrid
    TicTacToeView -> GameState: setGameEndWithDraw( )
    note right
    	 gameMode: ON_GAME -> GAME_OVER
    end note
    activate GameState
    GameState -> GameState: setGameEnd()
    activate GameState
    GameState -> GameState: setGameModeToGameOver( )
    GameState -> GameState: setGameResult(DRAW)
    GameState --> TicTacToeView
    deactivate GameState
    deactivate GameState
    TicTacToeView --> Player: early return
end

TicTacToeView -> GameTurn: go to next turn
note right
     Go to next turn, and change turn player
     when game does not end.
end note
activate GameTurn
GameTurn -> GameTurn: advanceGameTurn( )
activate GameTurn
GameTurn -> GameTurn: increaseGameTurn( )
GameTurn -> GameTurn: toggleGamePlayerKeyOnTurn( )
GameTurn --> TicTacToeView
deactivate GameTurn
deactivate GameTurn
TicTacToeView --> Player: 
deactivate TicTacToeView

@enduml
